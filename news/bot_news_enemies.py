"""
    Данный модуль формирует новости связанные с наличием врагов в случайных системах, существующих в игровом мире
    и базе данных и возвращает результат в модуль bot_news_main
"""
from settings_imports_globalVariables import *


def form_enemy_news() -> str:
    """
    Данная функция отправляет строку sql-запроса делает экзекьют и формирует кортеж, который отправляет в
    нижестоящую фукнцию и после ее работы возвращает ответ боту в модуль bot_main
    Объект курсора bd_sqlite3_cursor это МЕЖМОДУЛЬНАЯ ГЛОБАЛЬНАЯ переменная
    :return: строка ответа боту
    """
    #  В селекте я выбираю название мира и название группы(вида) врагов, джойню таблицы worlds и enemies связью многие
    #  ко многим через связующую таблицу worlds_enemies_relations, сортирую функцией рандом и выбираю 1 запись
    select_enemy_string = '''
    SELECT worlds.world_name, enemies.group_name
    FROM worlds
    INNER JOIN worlds_enemies_relations ON worlds.world_name == worlds_enemies_relations.world_name
    INNER JOIN enemies ON worlds_enemies_relations.enemy_name == enemies.enemy_name
    ORDER BY RANDOM()
    LIMIT 1
    '''

    enemy_news_tuple = tuple(global_bd_sqlite3_cursor.execute(select_enemy_string))
    str_enemy_news = form_string_answer(enemy_news_tuple)

    return str_enemy_news


def form_string_answer(enemy_tuple: tuple) -> str:
    """
    Данная функция формирует окончательный строковый ответ для бота путем соединения случайно выбранных сообщений
    и соединения их с данными из кортежа enemy_tuple. Сообщения для миров где есть враги и где их нет - отличаются
    :param enemy_tuple: кортеж из названия мира и названия группы врагов, существующих на этом мире.
    :return: строка с итоговым ответом
    """
    # Список сообщений для врагов
    warning_messages = ['Будьте внимательнее, путешествуя на этот мир',
                        'Для уточнения информации обратитесь в ближайший к системе имперский информационный центр',
                        'Посещать данный мир не будучи вооруженными - не рекомендуется',
                        'Путешествуя в данный мир будьте готовы к столкновению с врагами человечества',
                        'Да прибудет с вами Бог-Император!',
                        'Сохраняйте веру в своем сердце и праведная сила никогда вас не покинет',
                        'Уничтожайте врагов Империума при первой возможности',
                        'Каждый убитый еретик, ксенос и мутант приближают вас к Богу-Императору',
                        'Взаимодействие с врагами человечество, отличное от боестолкновения - запрещено',
                        'Любые враги Человечества должны быть уничтожены',
                        'Если у вас в голове появились еретические мысли - немедленно доложите в ближайшее отделение инквизиции']

    # Список сообщений в случае, если враги на мире отсутствуют
    peace_messages = ['Блажен тот кто верует',
                      'Спасибо Богу-Императору за мирное небо над головой',
                      'Не забудьте внести пожертвование в ближайший Храм Бога-Императора',
                      'Лишь благодаря Имперским Воинствам на этом мире нет угроз',
                      'Вступайте в Имперскую гвардию и СПО! Лишь общими усилиями этот мир будет сохранять безопасность',
                      'Не впадайте в порок безделия, посещая данный мир',
                      'Враги могут скрываться даже на внешне благополучном мире. Нашли еретика или предателя? Доложите немедленно']

    if enemy_tuple[0][1]:  # Если враги на мире присутствуют, то выбирается формирование данного сообщения
        str_answer = f'''
[НОВОСТЬ О ВРАГАХ] Ходят слухи, что на мире {enemy_tuple[0][0]} есть представляющие угрозу {enemy_tuple[0][1]}. 
{random.choice(warning_messages)}
    '''
    else:  # Если враги отсутствуют(группа врагов = Никто), то выбирается данное сообщение
        str_answer = f'''
[НОВОСТЬ О БЕЗОПАСНОМ МЕСТЕ] Ходят слухи, что на мире {enemy_tuple[0][0]} нет опасных врагов. {random.choice(peace_messages)}
'''

    return str_answer


if __name__ == '__main__':
    raise NotCallableModuleException
